name: BuildPulse
description: |
  Send test results to buildpulse.io to help you identify and eliminate flaky
  tests
author: Jason Rudolph
branding:
  icon: 'activity'
  color: 'gray-dark'
inputs:
  account:
    description: |
      BuildPulse's unique numeric identifier for the account that owns the
      repository.
    required: true
  repository:
    description: |
      BuildPulse's unique numeric identifier for the repository.
    required: true
  path:
    description: |
      Path to the XML file(s) for the test results.

      The path can be a directory (e.g., "test/reports"), a single file (e.g.,
      "reports/junit.xml"), or a glob (e.g., "app/*/results/*.xml").
    required: true
  key:
    description: |
      BuildPulse access key ID for the account that owns the repository.

      In the GitHub settings for your repository, create an encrypted secret
      named BUILDPULSE_ACCESS_KEY_ID and set its value to the BuildPulse access
      key ID for your account. For help creating encrypted secrets, please see
      the GitHub docs at https://git.io/JvX7H.

      Then, use the encrypted secret as the value for the 'key' input in your
      workflow. For help using a secret in a workflow, please see the GitHub
      docs at https://git.io/JvX77.
    required: true
  secret:
    description: |
      BuildPulse secret access key for the account that owns the repository.

      In the GitHub settings for your repository, create an encrypted secret
      named BUILDPULSE_SECRET_ACCESS_KEY and set its value to the BuildPulse
      secret access key for your account. For help creating encrypted secrets,
      please see the GitHub docs at https://git.io/JvX7H.

      Then, use the encrypted secret as the value for the 'secret' input in your
      workflow. For help using a secret in a workflow, please see the GitHub
      docs at https://git.io/JvX77.
    required: true
  repository-path:
    description: |
      Path to the local git clone of the repository (default: ".").
    default: '.'
    required: false
runs:
  using: docker
  image: Dockerfile
  env:
    INPUT_CLI_URL: ${{ inputs.cli-url }} # Translate kebab-case input to snake_case env var
    INPUT_REPOSITORY_PATH: ${{ inputs.repository-path }} # Translate kebab-case input to snake_case env var
